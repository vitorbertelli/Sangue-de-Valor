// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SangueDeValor.Infra.Data.Context;

#nullable disable

namespace SangueDeValor.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SangueDeValor.Dominio.Entidades.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Farmácia"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Mercado"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Lanches"
                        });
                });

            modelBuilder.Entity("SangueDeValor.Dominio.Entidades.Parceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Parceiros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 3,
                            Imagem = "https://lh3.googleusercontent.com/p/AF1QipPEcq-e-X8sinM_d3skDFfnchqMDIhBmIdxCf6g=w1080-h608-p-no-v0",
                            NomeFantasia = "Vila do Açaí"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            Imagem = "https://cuponomia-a.akamaihd.net/img/stores/medium/drogasil.png?v4",
                            NomeFantasia = "Drogasil"
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 2,
                            Imagem = "https://hortifruti.com.br/logo-hortifruti-eBB.svg",
                            NomeFantasia = "Hortifruti"
                        });
                });

            modelBuilder.Entity("SangueDeValor.Dominio.Entidades.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ParceiroId")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ParceiroId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Imagem = "https://contatei.com.br/img/bancodeimagens/acai/acai-copo.jpg?v=198",
                            Nome = "Açaí 500ml",
                            ParceiroId = 1,
                            Preco = 15.5m
                        },
                        new
                        {
                            Id = 2,
                            Imagem = "https://cdn-cosmos.bluesoft.com.br/products/7896226501239",
                            Nome = "Rivotril 2,5mg/ml",
                            ParceiroId = 2,
                            Preco = 35.9m
                        },
                        new
                        {
                            Id = 3,
                            Imagem = "https://cdn.shoppub.io/cdn-cgi/image/w=1000,h=1000,q=80,f=auto/cenourao/media/uploads/produtos/foto/67dc8df0dbe6file.png",
                            Nome = "Penca de banana",
                            ParceiroId = 3,
                            Preco = 10.9m
                        });
                });

            modelBuilder.Entity("SangueDeValor.Dominio.Entidades.Parceiro", b =>
                {
                    b.HasOne("SangueDeValor.Dominio.Entidades.Categoria", "Categoria")
                        .WithMany("Parceiros")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("SangueDeValor.Dominio.Entidades.Produto", b =>
                {
                    b.HasOne("SangueDeValor.Dominio.Entidades.Parceiro", "Parceiro")
                        .WithMany("Produtos")
                        .HasForeignKey("ParceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parceiro");
                });

            modelBuilder.Entity("SangueDeValor.Dominio.Entidades.Categoria", b =>
                {
                    b.Navigation("Parceiros");
                });

            modelBuilder.Entity("SangueDeValor.Dominio.Entidades.Parceiro", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
